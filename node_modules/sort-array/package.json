{
  "name": "sort-array",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "1.1.0",
  "description": "Sort an array of objects by any property value, at any depth, in any custom order.",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/sort-array.git"
  },
  "license": "MIT",
  "main": "./lib/sort-array.js",
  "keywords": [
    "sort",
    "by",
    "array",
    "recordset",
    "objects",
    "sorted",
    "asc",
    "desc"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "tape test/*.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "dependencies": {
    "array-back": "^1.0.0",
    "object-get": "^2.0.1",
    "typical": "^2.4.2"
  },
  "devDependencies": {
    "tape": "^4.4.0",
    "jsdoc-to-markdown": "^1.3.3"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/sort-array.svg)](https://www.npmjs.org/package/sort-array)\n[![npm module downloads](http://img.shields.io/npm/dt/sort-array.svg)](https://www.npmjs.org/package/sort-array)\n[![Build Status](https://travis-ci.org/75lb/sort-array.svg?branch=master)](https://travis-ci.org/75lb/sort-array)\n[![Dependency Status](https://david-dm.org/75lb/sort-array.svg)](https://david-dm.org/75lb/sort-array)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n<a name=\"module_sort-array\"></a>\n## sort-array\nSort an array of objects by any property value, at any depth, in any custom order.\n\n**Example**  \n```js\nvar sortBy = require('sort-array')\n```\n<a name=\"exp_module_sort-array--sortBy\"></a>\n### sortBy(recordset, columnNames, [customOrder]) ⇒ <code>Array</code> ⏏\n**Kind**: Exported function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| recordset | <code>Array.&lt;object&gt;</code> | Input array of objects |\n| columnNames | <code>string</code> &#124; <code>Array.&lt;string&gt;</code> | One or more property expressions to sort by,  e.g. `'name'` or `'name.first'`. |\n| [customOrder] | <code>object</code> | Custom sort order definitions. An object where each key is the property expression and the value is an array specifying the sort order. Example: <br> `{ importance: [ 'speed', 'strength', 'intelligence' ]}` |\n\n**Example**  \nwith this data\n```js\n> DJs = [\n  { name: 'Trevor', slot: 'twilight' },\n  { name: 'Chris', slot: 'twilight' },\n  { name: 'Mike', slot: 'afternoon' },\n  { name: 'Rodney', slot: 'morning' },\n  { name: 'Chris', slot: 'morning' },\n  { name: 'Zane', slot: 'evening' }\n]\n```\n\nsort by `slot` using the default sort order (alphabetical)\n```js\n> a.sortBy(DJs, 'slot')\n[ { name: 'Mike', slot: 'afternoon' },\n  { name: 'Zane', slot: 'evening' },\n  { name: 'Chris', slot: 'morning' },\n  { name: 'Rodney', slot: 'morning' },\n  { name: 'Chris', slot: 'twilight' },\n  { name: 'Trevor', slot: 'twilight' } ]\n```\n\nspecify a custom sort order for `slot`\n```js\n> var slotOrder = [ 'morning', 'afternoon', 'evening', 'twilight' ]\n> a.sortBy(DJs, 'slot', { slot: slotOrder })\n[ { name: 'Rodney', slot: 'morning' },\n  { name: 'Chris', slot: 'morning' },\n  { name: 'Mike', slot: 'afternoon' },\n  { name: 'Zane', slot: 'evening' },\n  { name: 'Trevor', slot: 'twilight' },\n  { name: 'Chris', slot: 'twilight' } ]\n```\n\nsort by `slot` then `name`\n```js\n> a.sortBy(DJs, ['slot', 'name'], { slot: slotOrder })\n[ { name: 'Chris', slot: 'morning' },\n  { name: 'Rodney', slot: 'morning' },\n  { name: 'Mike', slot: 'afternoon' },\n  { name: 'Zane', slot: 'evening' },\n  { name: 'Chris', slot: 'twilight' },\n  { name: 'Trevor', slot: 'twilight' } ]\n```\n\nsort by nested property values (at any depth) using dot notation (e.g. `'inner.number'`)\n```js\n> input = [\n  { inner: { number: 5 } },\n  { inner: { number: 2 } },\n  { inner: { number: 3 } },\n  { inner: { number: 1 } },\n  { inner: { number: 4 } }\n]\n\n> sortBy(input, 'inner.number')\n[ { inner: { number: 1 } },\n  { inner: { number: 2 } },\n  { inner: { number: 3 } },\n  { inner: { number: 4 } },\n  { inner: { number: 5 } } ]\n```\n\na custom order for a nested property looks like this:\n```js\nvar customOrder = {\n  'inner.number': [ 1, 2, 4, 3, 5 ]\n}\n```\n\n* * *\n\n&copy; 2015-16 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/sort-array/issues"
  },
  "homepage": "https://github.com/75lb/sort-array",
  "_id": "sort-array@1.1.0",
  "dist": {
    "shasum": "6c68d5cf8a006839f185fd9a3f3001f11ce41d4f"
  },
  "_from": "sort-array@1.1.0",
  "_resolved": "https://registry.npmjs.org/sort-array/-/sort-array-1.1.0.tgz"
}
